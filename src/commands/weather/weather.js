const path = require("path");
const weatherCodes = {
  0: "‚òÄÔ∏è C√©u Limpo",
  1: "üå§Ô∏è Predominantemente Limpo",
  2: "‚õÖ Parcialmente Nublado",
  3: "‚òÅÔ∏è Encoberto",
  45: "üå´Ô∏è Nevoeiro",
  48: "‚ùÑÔ∏è Nevoeiro com Geada",
  51: "üå¶Ô∏è Chuvisco Leve",
  53: "üåßÔ∏è Chuvisco Moderada",
  55: "üåßÔ∏è Chuvisco Densa",
  56: "üå®Ô∏è Chuvisco Congelante Leve",
  57: "üå®Ô∏è‚ùÑÔ∏è Chuvisco Congelante Densa",
  61: "üå¶Ô∏è Chuva Fraca",
  63: "üåßÔ∏è Chuva Moderada",
  65: "üåßÔ∏èüåä Chuva Forte",
  66: "üå®Ô∏è Chuva Congelante Leve",
  67: "üå®Ô∏è‚ùÑÔ∏è Chuva Congelante Forte",
  71: "‚ùÑÔ∏è Neve Fraca",
  73: "‚ùÑÔ∏è‚òÉÔ∏è Neve Moderada",
  75: "‚ùÑÔ∏èüå®Ô∏è Neve Forte",
  77: "üå®Ô∏è Granizo",
  80: "üå¶Ô∏è Pancadas de Chuva Fracas",
  81: "üåßÔ∏è Pancadas de Chuva Moderadas",
  82: "üåßÔ∏è Pancadas de Chuva Violentas",
  85: "‚ùÑÔ∏è Pancadas de Neve Fracas",
  86: "‚ùÑÔ∏èüå®Ô∏è Pancadas de Neve Fortes",
  95: "üå©Ô∏è Trovoada Fraca ou Moderada",
  96: "‚õàÔ∏è Trovoada com Granizo Leve",
  99: "‚õàÔ∏è Trovoada com Granizo Forte",
};

function formatWindDirection(windDirection) {
  const directions = ["N", "NE", "E", "SE", "S", "SO", "O", "NO"]; // should work xd
  return directions[Math.floor(windDirection / 45)];
}

async function getWeather(location) {
  const api_url = `https://nominatim.openstreetmap.org/search?q=${location}&format=json&limit=1&addressdetails=1&accept-language=pt-PT`;

  const data = await fb.got(api_url);
  if (!data || data.length === 0) {
    return null;
  }

  const locationData = data[0];
  const lat = locationData.lat;
  const lon = locationData.lon;
  const city = Object.values(locationData.address)[0];
  const country = locationData.address.country;
  const displayName = city + ", " + country;

  const weatherInfo = await getWeatherInfo(displayName, lat, lon);

  return weatherInfo;
}

async function getWeatherInfo(displayName, lat, lon) {
  const api_url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,rain,weather_code,wind_speed_10m,wind_direction_10m`;

  const res = await fb.got(api_url);
  if (!res) {
    return null;
  }

  const weatherCode = res.current.weather_code;
  const weatherDescription = weatherCodes[weatherCode];
  const temperature = res.current.temperature_2m;
  const humidity = res.current.relative_humidity_2m;
  const feelsLike = res.current.apparent_temperature;
  const precipitation = res.current.precipitation;
  const windSpeed = res.current.wind_speed_10m;
  const windDirection = formatWindDirection(res.current.wind_direction_10m);

  return {
    displayName,
    weatherDescription,
    temperature,
    humidity,
    feelsLike,
    precipitation,
    windSpeed,
    windDirection,
  };
}

const weatherCommand = async (message) => {
  let weatherTargetLocation = message.args.slice(1).join(" ");
  let usedDbInfo = false;

  if (!weatherTargetLocation) {
    // get weather location from db
    const userWeatherDb = await fb.db.get("weather", {
      userId: message.senderUserID,
    });
    if (!userWeatherDb) {
      return {
        reply: `Voc√™ ainda n√£o configurou uma localiza√ß√£o. Use ${message.prefix}weather set <localiza√ß√£o> para configurar`,
      };
    }
    weatherTargetLocation = userWeatherDb.location;
    usedDbInfo = true;
  }

  if (weatherTargetLocation.split(" ")[0] === "set") {
    const location = weatherTargetLocation.split(" ").slice(1).join(" ");
    if (!location) {
      return {
        reply: `Voc√™ precisa fornecer uma localiza√ß√£o para configurar. Use ${message.prefix}weather set <localiza√ß√£o>`,
      };
    }

    if (["secret", "secreto"].includes(location.toLowerCase())) {
      const userWeatherDb = await fb.db.get("weather", {
        userId: message.senderUserID,
      });
      if (!userWeatherDb) {
        return {
          reply: `Voc√™ ainda n√£o configurou uma localiza√ß√£o. Use ${message.prefix}weather set <localiza√ß√£o> para configurar`,
        };
      }
      const currentSecretState = userWeatherDb.secret;
      await fb.db.update(
        "weather",
        { userId: message.senderUserID },
        { $set: { secret: !currentSecretState } }
      );

      const emote = await fb.emotes.getEmoteFromList(
        message.channelName,
        ["joia", "jumilhao"],
        "üëç"
      );
      return {
        reply: `Localiza√ß√£o alterada para estado ${
          !currentSecretState ? "secreto" : "p√∫blico"
        } ${emote}`,
      };
    }

    const userWeatherDb = await fb.db.get("weather", {
      userId: message.senderUserID,
    });
    if (!userWeatherDb) {
      await fb.db.insert("weather", {
        userId: message.senderUserID,
        location: location,
        secret: false,
      });

      const emote = await fb.emotes.getEmoteFromList(
        message.channelName,
        ["joia", "jumilhao"],
        "üëç"
      );
      return {
        reply: `Localiza√ß√£o configurada com sucesso ${emote}`,
      };
    }
    await fb.db.update(
      "weather",
      { userId: message.senderUserID },
      { $set: { location: location } }
    );

    const emote = await fb.emotes.getEmoteFromList(
      message.channelName,
      ["joia", "jumilhao"],
      "üëç"
    );
    return {
      reply: `Localiza√ß√£o configurada com sucesso ${emote}`,
    };
  }

  const weatherInfo = await getWeather(weatherTargetLocation);
  if (!weatherInfo) {
    return {
      reply: `Localiza√ß√£o n√£o encontrada`,
    };
  }

  const userWeatherDb = await fb.db.get("weather", {
    userId: message.senderUserID,
  });
  if (usedDbInfo && userWeatherDb.secret) {
    weatherInfo.displayName = "(Localiza√ß√£o escondida)";
  }

  return {
    reply: `${weatherInfo.displayName}: ${weatherInfo.weatherDescription}, ${
      weatherInfo.temperature
    }¬∞C (aparente: ${weatherInfo.feelsLike}¬∞C), ${
      weatherInfo.humidity
    }% humidade, ${
      weatherInfo.precipitation !== 0
        ? `precipita√ß√£o: ${weatherInfo.precipitation}mm, `
        : ""
    }${weatherInfo.windSpeed}km/h ${weatherInfo.windDirection}`,
  };
};

weatherCommand.commandName = "weather";
weatherCommand.aliases = ["weather", "wt", "clima"];
weatherCommand.shortDescription =
  "Comando para verificar o clima de uma localiza√ß√£o";
weatherCommand.cooldown = 5000;
weatherCommand.cooldownType = "channel";
weatherCommand.whisperable = true;
weatherCommand.description = `Comando para verificar o clima de uma localiza√ß√£o

!weather {localiza√ß√£o} - Verifica o clima de uma localiza√ß√£o espec√≠fica fornecida
!weather set {localiza√ß√£o} - Configure a sua localiza√ß√£o para n√£o ter de especificar todas as vezes, se quiser que seja secreta, use este comando no whisper e depois use o !weather set secret

!weather set secret - Alterna o estado da localiza√ß√£o entre p√∫blico e secreto, para que n√£o seja exibida para outros usu√°rios

!weather - Caso tenha configurado uma localiza√ß√£o, verifica o clima da sua localiza√ß√£o configurada`;
weatherCommand.code = `https://github.com/leafyzito/jsFolhinha/blob/main/src/commands/${__dirname.split(path.sep).pop()}/${__filename.split(path.sep).pop()}`;

module.exports = {
  weatherCommand,
};
